..| File name in SLM      : masm60\help\ml\A1XXX.SRC
..| Help file destination : ML.HLP
..| 
..| Contents of this file : MASM fatal assembler errors
..| Product and version   : MASM 6.1
..| 
..| Number of errors      : 19
..| Number of topics      : 21
..| Number of contexts    : 
..| First context         : errtoc.masm
..| Last context          : A1015
..|
..| HISTORY (start)
..| 90 01 20 created by JonKa as \MASM60\HELP\ML\ERRS.SRC
..| 90 02 27 OWNERSHIP: MarciM, new version created as AXXXX.SRC
..| 90 02 28 Removed .topic; global .context on top; string on new line
..| 90 03 01 Added internal causes (to be removed by beta 1); added
..|          new A2144, A2145, A2146; new A4001 (4001->4002,4002->4003)
..| 90 03 09 Added descriptions (first draft)
..| 90 04 03 (jonka) Added errtoc.masm to TOC to match convention
..| 90 04 17 First review
..| 90 10 02 Divided AXXXX.SRC into A1XXX, A2XXX, A4XXX
..| 90 10 02 Added placeholders for new errors
..| 90 10 02 Created TOC
..| 90 10 08 <Up>=>localTOC; new in TOC; hid CAUSEs; made metaTOC
..| 90 10 08 MASM Beta 1
..| 90 10 10 Fatal error -> MASM fatal error; added section in metaTOC
..| 90 10 19 Alts post-beta1, pre-2ndRev
..| 90 10 22 OWNERSHIP: WillieS
..| 90 10 29 OWNERSHIP: JonKa
..| 90 11 07 Pass to correct/improve before Beta 2
..| 91 01 13 Spec changes for Beta 2.5
..| 91 01 16 Final Review
..| 91 02 20 Add A1019
..| 92 08 18 OWNERSHIP: JonKa *sigh*
..| 92 08 18 Updates for V6.10 begin.
..| 92 10 20 Update for V6.1 continue a-abird
..| HISTORY (end)
..|
..| Errors numbered Ax9xx are generated by MASM rather than ML.
..|
..| Doubled backslashes: none
..|
..| ..*.INTERNAL comments give the internal error name
..| ..*.SPEC comments are references to the MASM 6.1spec
..| ..MSI.CAUSE comments are internal notes from the developers
..| ..marcim comments will be acted on and removed before ship
..|
.context errtoc.masm
.context @errtoc.masm
.freeze 3
:nMacro Assembler and H2INC Errors
..LUE This screen is linked from pwb.help!errortoc.  Each category
..LUE  links to a table listing errors in one help .SRC file. 
..LUE  Contexts are err<srcfile>, where <srcfile> is the name of the
..LUE  help .SRC file for that category.
                                             \i\p\aUp\vpwb.hlp!errortoc\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     \bMacro Assembler and H2INC Errors\p

     \bError Number\p     \bCategory of Error\p

     A1xxx            \i\p\aMacro Assembler Fatal Errors\v@errA1XXX\v\i\p
     A2xxx            \i\p\aMacro Assembler Nonfatal Errors\v@errA2XXX\v\i\p
     A4xxx            \i\p\aMacro Assembler Warnings\v@errA4XXX\v\i\p
     A5xxx            \i\p\aMacro Assembler Warnings\v@errA5XXX\v\i\p
     A6xxx            \i\p\aMacro Assembler Warnings\v@errA6XXX\v\i\p

     HI1xxx           \i\p\aH2INC Fatal Errors\v@errHI1XXX\v\i\p
     HI2xxx           \i\p\aH2INC Nonfatal Errors\v@errHI2XXX\v\i\p
     HI4xxx           \i\p\aH2INC Warnings\v@errHI4XXX\v\i\p

     \bError Threshold\p

     The MASM command-line option /W (or the Warn Level check box
     in the PWB Compile Options dialog box) controls the severity
     of the warnings and errors displayed.

     Option    Warn Level    Errors displayed

     /W0       Level 0       A1xxx-A2xxx
     /W1       Level 1       A1xxx-A4xxx
     /W2       Level 2       A1xxx-A5xxx
     /W3       Level 3       A1xxx-A6xxx

.context @errA1XXX
.freeze 3
.topic MASM 6.1Error Codes
                                             \i\p\aUp\v@errtoc.masm\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     \bMacro Assembler Fatal Errors\p

     To find out about a specific error, click on the error number
     with the right mouse button.

     See: \i\p\aHow to View Errors Help\vadvisor.hlp!errorview\v\i\p

     A1000     A1005     A1009     A1013     A1901
     A1001     A1006     A1010     A1014
     A1002     A1007     A1011     A1015
     A1003     A1008     A1012     A1017
.context A1000
..*.INTERNAL eFileOpen
.freeze 3
                                             \i\p\aUp\v@errA1XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     MASM fatal error A1000

     cannot open file: 'filename'

     The assembler was unable to open a source, include, or output
     file.

     One of the following may be a cause:

        ş The file does not exist.

        ş The file is in use by another process.

        ş The filename is not valid.

        ş A read-only file with the output filename already exists.

        ş Not enough file handles exist. In DOS, increase the number
          of file handles by changing the FILES setting in CONFIG.SYS
          to allow a larger number of open files. FILES=50 is the
          recommended setting.

        ş The current drive is full.

        ş The current directory is the root and is full.

        ş The device cannot be written to.

        ş The drive is not ready.

..MSI.CAUSE Could not find include file
..MSI.CAUSE Could not open include file
..MSI.CAUSE Could not open output file
..MSI.CAUSE Could not open source file

.context A1001
..*.INTERNAL eFileClose
.freeze 3
                                             \i\p\aUp\v@errA1XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     MASM fatal error A1001

     I/O error closing file

     The operating system returned an error when the assembler
     attempted to close a file.

     This error can be caused by having a corrupt file system or by
     removing a disk before the file could be closed.

..MSI.CAUSE I/O call to close file returned error

.context A1002
..*.INTERNAL eFileWrite
.freeze 3
                                             \i\p\aUp\v@errA1XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     MASM fatal error A1002

     I/O error writing file

     The assembler was unable to write to an output file.

     One of the following may be a cause:

        ş The current drive is full.

        ş The current directory is the root and is full.

        ş The device cannot be written to.

        ş The drive is not ready.

..MSI.CAUSE I/O call to write to file returned error

.context A1003
..*.INTERNAL eFileRead
.freeze 3
                                             \i\p\aUp\v@errA1XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     MASM fatal error A1003

     I/O error reading file

     The assembler encountered an error when trying to read a file.

     One of the following may be a cause:

        ş The disk has a bad sector.

        ş The file-access attribute is set to prevent reading.

        ş The drive is not ready.

..MSI.CAUSE I/O call to read from file returned error

.context A1005
..*.INTERNAL eMacroNamesFull

.freeze 3
                                             \i\p\aUp\v@errA1XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     MASM fatal error A1005

     assembler limit : macro parameter name table full

     Too many parameters, locals, or macro labels were defined for a
     macro. There was no more room in the macro name table.

     Define shorter or fewer names, or remove unnecessary macros.

..MSI.CAUSE Out of room in macro name table

.context A1006
..*.INTERNAL eML
..*.SPEC p93 17. warnings
.freeze 3
                                             \i\p\aUp\v@errA1XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     MASM fatal error A1006

     invalid command-line option: 'option'

     ML did not recognize the given parameter as an option.

     This error is generally caused when there is a syntax error on the
     command line.
..MSI.CAUSE Command line error, via CommErr()
..MSI.NOTE The MASM driver passes unknown options to ML unaltered,
..MSI.NOTE  so A1006 eML is just an ML error.

.context A1007
..*.INTERNAL eNest
..*.SPEC p11 5. 2nd para
.freeze 3
                                             \i\p\aUp\v@errA1XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     MASM fatal error A1007

     nesting level too deep

     The assembler reached its nesting limit. The limit is 20 levels
     except where noted otherwise.

     One of the following was too deeply nested:

        ş A high-level directive such as .IF, .REPEAT, or .WHILE

        ş A structure definition

        ş A conditional-assembly directive

        ş A procedure definition

        ş A PUSHCONTEXT directive (The limit is 10.)

        ş A segment definition

        ş An include file

        ş A macro

..MSI.CAUSE Too deeply nested .IF etc. constructs
..MSI.CAUSE Too deeply nested structure definition
..MSI.CAUSE Too deeply nested conditional assembly IF
..MSI.CAUSE Too deeply nested procedure definition
..MSI.CAUSE Too deeply nested context save
..MSI.CAUSE Too deeply nested segment definition
..MSI.CAUSE Too deeply nested include files
..MSI.CAUSE Macro nesting depth too deep

.context A1008
..*.INTERNAL eMacroNest
.freeze 3
                                             \i\p\aUp\v@errA1XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     MASM fatal error A1008

     unmatched macro nesting

     Either a macro was not terminated before the end of the file, or
     the terminating directive ENDM was found outside of a macro block.

     One cause of this error is omission of the dot before .REPEAT or
     .WHILE.

..MSI.CAUSE ENDM outside macro (block nesting error)
..MSI.CAUSE Found end-of-file while building macro definition

.context A1009
..*.INTERNAL eLine2LongFatal
..*.NOTE See A2039 eLine2Long
.freeze 3
                                             \i\p\aUp\v@errA1XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     MASM fatal error A1009

     line too long

     A line in a source file exceeded the limit of 512 characters.

     If multiple physical lines are concatenated with the line-
     continuation character (\\), the resulting logical line is
     still limited to 512 characters.
..LUE.BACKSLASH One single

..MSI.CAUSE Line too long (there is a non-fatal version as
..MSI.CAUSE well.  Whether you get the fatal or the
..MSI.CAUSE non-fatal version depends on whether or not
..MSI.CAUSE we can recover.  This, in turn, depends on
..MSI.CAUSE whether a buffer boundary is reached after
..MSI.CAUSE the first 512 characters of the logical line).

.context A1010
..*.INTERNAL eBlockNest
.freeze 3
                                             \i\p\aUp\v@errA1XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     MASM fatal error A1010

     unmatched block nesting :

     A block beginning did not have a matching end, or a block end
     did not have a matching beginning. One of the following may
     be involved:

        ş A high-level directive such as .IF, .REPEAT, or .WHILE

        ş A conditional-assembly directive such as IF, REPEAT, or WHILE

        ş A structure or union definition

        ş A procedure definition

        ş A segment definition

        ş A POPCONTEXT directive

        ş A conditional-assembly directive, such as an ELSE, ELSEIF, or
          ENDIF without a matching IF

..MSI.CAUSE Block nesting error in .IF structures
..MSI.CAUSE   "     "    "   in structure definition
..MSI.CAUSE   "     "    "   in procedure definition
..MSI.CAUSE   "     "    "   in segment definition
..MSI.CAUSE Block nesting error on ENDIF
..MSI.CAUSE ELSE seen outside IF
..MSI.CAUSE ELSEIF seen outside IF
..MSI.CAUSE Pop context w/out matching push

.context A1011
..*.INTERNAL eNotInIf
.freeze 3
                                             \i\p\aUp\v@errA1XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     MASM fatal error A1011

     directive must be in control block

     The assembler found a high-level directive where one was not
     expected. One of the following directives was found:

        ş .ELSE without .IF

        ş .ENDIF without .IF

        ş .ENDW without .WHILE

        ş .UNTIL[CXZ] without .REPEAT

        ş .CONTINUE without .WHILE or .REPEAT

        ş .BREAK without .WHILE or .REPEAT

        ş .ELSE following .ELSE

..MSI.CAUSE .ELSE not in .IF
..MSI.CAUSE .ENDIF not in .IF
..MSI.CAUSE .ENDW not in .WHILE
..MSI.CAUSE .UNTIL[cxz] not in .REPEAT
..MSI.CAUSE .CONTINUE not in .WHILE or .REPEAT
..MSI.CAUSE .BREAK not in .WHILE or .REPEAT
..MSI.CAUSE Already seen a .ELSE and see another

.context A1012
..*.INTERNAL eTooManyErrs
.freeze 3
                                             \i\p\aUp\v@errA1XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     MASM fatal error A1012

     error count exceeds 100; stopping assembly

     The number of nonfatal errors exceeded the assembler limit of 100.

     Nonfatal errors are in the range A2xxx. When warnings are treated
     as errors they are included in the count. Warnings are considered
     errors if you use the /Wx command line option, or if you set the
     Warnings Treated as Errors option in the Macro Assembler Global
     Options dialog box of PWB.

..MSI.CAUSE More than 100 errors found

.context A1013
.freeze 3
..*.INTERNAL eML2
                                             \i\p\aUp\v@errA1XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     MASM fatal error A1013

     invalid numerical command-line argument : 'number'

     The argument specified with an option was not a number or was an
     invalid number.

..MSI.CAUSE -Zp5 or -Sl3 or -F with a non-hex number

.context A1014
..*.INTERNAL eML3
.freeze 3
                                             \i\p\aUp\v@errA1XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     MASM fatal error A1014

     too many arguments

     There was insufficient memory to hold all of the command-line
     arguments.

     This error usually occurs while expanding input filename wildcards
     (* and ?). To eliminate this error, assemble multiple source files
     separately.
..marcim ***Description needed***   Done.  --JCK
..       Is it "arguments", or "options"? Arguments.  --JCK

..MSI.CAUSE too many args on command line or in ML env var

.context A1015
..*.INTERNAL e2ManyToksFatal
.freeze 3
                                             \i\p\aUp\v@errA1XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     MASM fatal error A1015

     statement too complex

     The assembler ran out of stack space while trying to parse
     the specified statement.

     One or more of the following changes may eliminate this error:

        ş Break the statement into several shorter statements.

        ş Reorganize the statement to reduce the amount of
          parenthetical nesting.

        ş If the statement is part of a macro, break the macro
          into several shorter macros.

..MSI.CAUSE Too many tokens on line
..MSI.CAUSE Expression size > 255 bytes
..MSI.CAUSE While defining a macro

.context A1017
..*.INTERNAL eMLNoSrc
.freeze 3
                                             \i\p\aUp\v@errA1XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     MASM fatal error A1017

     missing source filename

     ML could not find a file to assemble or pass to the linker.

     This error is generated when you give ML command-line options
     without specifying a filename to act upon. To assemble files
     that do not have a .ASM extension, use the /Ta command-line
     option.

     This error can also be generated by invoking ML with no parameters
     if the ML environment variable contains command-line options.

.context A1901
.freeze 3
                                             \i\p\aUp\v@errA1XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     MASM fatal error A1901

     Internal Assembler Error
     Contact Microsoft Support Services

     The MASM driver called ML.EXE, which generated a system error.

     Note the circumstances of the error and notify Microsoft
     Corporation by following the instructions in the Microsoft Support
     Services section of your Environment and Tools book.
..marcim Have bobal review this message and the first description line.
..marcim  The second paragraph is a standard one; do not change it.
