..| File name in SLM      : masm60\help\ml\A4XXX.SRC
..| Help file destination : ML.HLP
..| 
..| Contents of this file : MASM assembler warnings
..| Product and version   : MASM 6.00
..| 
..| Number of errors      : 21
..| Number of topics      : 22
..| Number of contexts    : 
..| First context         : @errA4XXX
..| Last context          : @A6003
..|
..| HISTORY (start)
..| 90 02 27 OWNERSHIP: MarciM (see A1XXX.SRC for other history)
..| 90 10 02 Divided AXXXX.SRC into A1XXX, A2XXX, A4XXX
..| 90 10 02 Added placeholders for new errors
..| 90 10 08 <Up>=>localTOC; new in TOC; hid CAUSEs
..| 90 10 08 MASM Beta 1
..| 90 10 10 Serious/Advisory warning --> MASM warning
..| 90 10 19 Alts post-beta1, pre-2ndRev
..| 90 10 22 OWNERSHIP: WillieS
..| 90 10 31 OWNERSHIP: JonKa
..| 90 12 03 Incorporated BobAl review comments
..| 91 02 12 Added new message A6004
..| 91 02 21 Added new message A4013
..| 91 03 01 Switched 5006->6005, added 4014
..| 92 08 18 OWNERSHIP: JonKa *sigh*
..| 92 08 18 Updates for V6.10 begin.
..| 92 10 20 Updates continue - a-abird
..| HISTORY (end)
..|
..| Errors numbered Ax9xx are generated by MASM rather than ML.
..|
..| Doubled backslashes: none
..|
..| ..*.INTERNAL comments give the internal error name
..| ..*.SPEC comments are references to the MASM 6.0 spec
..| ..MSI.CAUSE comments are internal notes from the developers
..| ..marcim comments will be acted on and removed before ship
..|
.context @errA4XXX
.context @errA5XXX
.context @errA6XXX
.freeze 3
.topic MASM 6.1Error Codes
                                             \i\p\aUp\v@errtoc.masm\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

     \bMacro Assembler Warnings\p

     To find out about a specific error, click on the error number
     with the right mouse button.

     See: \i\p\aHow to View Errors Help\vadvisor.hlp!errorview\v\i\p

     A4000     A4006     A4011     A5001     A6001
     A4002     A4007     A4012     A5002     A6003
     A4003     A4008     A4013     A5003     A6004
     A4004     A4009     A4910     A5004     A6005
     A4005     A4010     A5000     A5005

     The generation of these warnings depends on the warning level
     specified on the command line.
     See: \i\p\aSet Warning Level\v@mwarnings\v\i\p
.context A4000
..*.INTERNAL eImpure
..*.SPEC, p14, 5.3.3 last l of p (spec says "error")
.freeze 3
                                             \i\p\aUp\v@errA4XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

     MASM warning A4000

     cannot modify READONLY segment

     An attempt was made to modify an operand in a segment marked with
     the READONLY attribute.

..MSI.CAUSE Instruction modifies operand in readonly segment

.context A4002
..*.INTERNAL eUsedAsUnique
.freeze 3
                                             \i\p\aUp\v@errA4XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

     MASM warning A4002

     non-unique STRUCT/UNION field used without qualification

     A STRUCT or UNION field can be referenced without qualification
     only if it has a unique identifier.

     This conflict can be resolved either by renaming one of the
     structure fields to make it unique or by fully specifying
     both field references.

     The NONUNIQUE keyword requires that all references to the
     elements of a STRUCT or UNION be fully specified.

..MSI.CAUSE A struct or union field was defined with oldStructs, used
..MSI.CAUSE  without qualification while it was still unique, and then
..MSI.CAUSE  made nonunique by defining another field of the same name
..MSI.CAUSE  in a different structure. This has two possible fixes:
..MSI.CAUSE    (1) Change the name of one of the fields so the
..MSI.CAUSE        unique reference(s) remain(s) valid.
..MSI.CAUSE    (2) Mark the structure with the first definition
..MSI.CAUSE        as "nonUnique" and re-assemble the module.
..MSI.CAUSE  Every unqualified reference to the first field will be
..MSI.CAUSE  flagged as an error. The programmer can then qualify each
..MSI.CAUSE  of these references.

.context A4003
..*.INTERNAL eStartFound
.freeze 3
                                             \i\p\aUp\v@errA4XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

     MASM warning A4003

     start address on END directive ignored with .STARTUP

     Both .STARTUP and a program load address (optional with the END
     directive) were specified. The address specification with the END
     directive was ignored.

..MSI.CAUSE There was a .STARTUP directive, but an explicit start
..MSI.CAUSE  address was given

.context A4004
..*.INTERNAL eAssCS
..*.SPEC p16 5.5.1 1st p, end
.freeze 3
                                             \i\p\aUp\v@errA4XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

     MASM warning A4004

     cannot ASSUME CS

     An attempt was made to assume a value for the CS register. CS is
     always set to the current segment or group.

..MSI.CAUSE Assume of CS to error, nothing, or non-current value
.context A4005
..*.INTERNAL eBadPrologueArg
.freeze 3
                                             \i\p\aUp\v@errA4XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

     MASM warning A4005

     unknown default prologue argument

     An unknown argument was passed to the default prologue.

     The default prologue understands only the FORCEFRAME and LOADDS
     arguments.
.context A4006
..*.INTERNAL e2ManyParms
.freeze 3
                                             \i\p\aUp\v@errA4XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

     MASM warning A4006

     too many arguments in macro call

     There were more arguments given in the macro call than there were
     parameters in the macro definition.

..marcim ***Description needed***  Done. --JCK

.context A4007
..*.INTERNAL eUntranslatedOption
.freeze 3
                                             \i\p\aUp\v@errA4XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

     MASM warning A4007

     option untranslated, directive required : 'option'

     There is no ML command-line equivalent for the given MASM option.
     The desired behavior can be obtained by using a directive in the
     source file.

     \bOption\p         \bDirective\p

     /A             .ALPHA
     /P             OPTION READONLY
     /S             .SEQ
..marcim ***Description needed***  Done.  --JCK

.context A4008
..*.INTERNAL eMLWarn
.freeze 3
                                             \i\p\aUp\v@errA4XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

     MASM warning A4008

     invalid command-line option value, default is used : 'option'

     The value specified with the given option was not valid. The
     option was ignored and the default was assumed.

.context A4009
..*.INTERNAL eNoEP
.freeze 3
                                             \i\p\aUp\v@errA4XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

     MASM warning A4009

     insufficent memory for /EP : /EP ignored

     There is not enough memory to generate a first-pass listing.

..marcim ***Description needed***  Done. --JCK

..MSI.CAUSE There is not sufficent memory to enable the -EP option.
..MSI.CAUSE  The -EP option is being disabled.

.context A4010
..*.INTERNAL eExpCloseAngle
.freeze 3
                                             \i\p\aUp\v@errA4XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

     MASM warning A4010

     expected '>' on text literal

     A macro was called with a text literal argument that was missing
     a closing angle bracket.

..MSI.CAUSE We expected to see a close angle on the
..MSI.CAUSE end of the text literal in a macro invocation

.context A4011
..*.INTERNAL eDupModel
.freeze 3
                                             \i\p\aUp\v@errA4XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

     MASM warning A4011

     multiple .MODEL directives found : .MODEL ignored

     More than one .MODEL directive was found in the current module.
     Only the first .MODEL statement is used.

..MSI.CAUSE More that one .model directive was found.  All
..MSI.CAUSE .model directives after the first are ignored.
.context A4012
..*.INTERNAL eNonCodeCV
.freeze 3
                                             \i\p\aUp\v@errA4XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

     MASM warning A4012

     line number information for segment without class 'CODE'

     There were instructions in a segment that did not have a class
     name that ends with "CODE". The assembler did not generate
     CodeView information for these instructions.

     CodeView cannot process modules with code in segments with
     class names that do not end with "CODE".
.context A4013
..*.INTERNAL eAtSeg
.freeze 3
                                             \i\p\aUp\v@errA2XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

     MASM warning A4013

     instructions and initialized data not supported in AT segments

     An instruction or initialized data was found in a segment defined
     with the AT attribute. The code or data will not be loaded at run
     time.

     Data in AT segments must be declared with the ? initializer.

..marcim The message has changed, so revise this description.

..MSI.CAUSE Instruction in AT segment

.context A4910
..*.INTERNAL eNoMlErr
.freeze 3
                                             \i\p\aUp\v@errA4XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

     MASM warning A4910

     cannot open file: 'filename'

     The given filename could not be found in the current path.

     Make sure that 'filename' was copied from the distribution disks
     and is in the current path.

..MSI.CAUSE Ml.err is missing or cannot be opened

.context A5000
..*.INTERNAL eAtatUnref
.freeze 3
                                             \i\p\aUp\v@errA4XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

     MASM warning A5000

     @@ label defined but not referenced

     A jump target was defined with the @@: label, but the target was
     not used by a jump instruction.

     One common cause of this error is insertion of an extra @@: label
     between the jump and the @@: that the jump originally referred to.

..MSI.CAUSE @@: not referenced

.context A5001
..*.INTERNAL eMissExpr0
.freeze 3
                                             \i\p\aUp\v@errA4XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

     MASM warning A5001

     expression expected, assume value 0

     There was an IF, ELSEIF, IFE, IFNE, ELSEIFE, or ELSEIFNE directive
     without an expression to evaluate. The assembler assumes a 0 for
     the comparison expression.

..marcim ***Description needed***  Done.  --JCK

..MSI.CAUSE No expression on IF, ELSEIF, IFE, IFNE, ELSEIFE, ELSEIFNE

.context A5002
..*.INTERNAL eUsedAsExternal
.freeze 3
                                             \i\p\aUp\v@errA4XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

     MASM warning A5002

     externdef previously assumed to be external

     The OPATTR or .TYPE operator was applied to a symbol after the
     symbol was used in an EXTERNDEF statement but before it was
     declared. These operators were used on a line where the assembler
     assumed that the symbol was external.

..marcim ***Description needed*** Done.  --JCK

..MSI.CAUSE Between the externdef of a symbol and its definition was an
..MSI.CAUSE  application of .TYPE or OPATTR to the symbol, the result
..MSI.CAUSE  of which assumed the symbol was an extern.

.context A5003
..*.INTERNAL eLenChanged
.freeze 3
                                             \i\p\aUp\v@errA4XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

     MASM warning A5003

     length of symbol previously assumed to be different

     The LENGTHOF, LENGTH, SIZEOF, or SIZE operator was applied to a
     symbol after the symbol was used in an EXTERNDEF statement but
     before it was declared. These operators were used on a line where
     the assembler assumed that the symbol had a different length and
     size.

..marcim ***Description needed***  Done.  --JCK

..MSI.CAUSE Length, size, lengthof, or sizeof operator(s) were applied
..MSI.CAUSE  to an externdef'd symbol between the externdef and the
..MSI.CAUSE  symbol's definition, causing a change in the symbol's
..MSI.CAUSE  length and lengthOf attributes (and therefore the size and
..MSI.CAUSE  sizeOf attributes).

.context A5004
..*.INTERNAL eUsedNoGrp
.freeze 3
                                             \i\p\aUp\v@errA4XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

     MASM warning A5004

     symbol previously assumed to not be in a group

     A symbol was used in an EXTERNDEF statement outside of a segment
     and then was declared inside a segment.

..marcim ***Description needed***  Done.  --JCK

..MSI.CAUSE Externdef appeared outside any segment, but the symbol's
..MSI.CAUSE  definition appeared in a segment with a group.

.context A5005
..*.INTERNAL eTypesDifferent
.freeze 3
                                             \i\p\aUp\v@errA4XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

     MASM warning A5005

     types are different

     The type given by an INVOKE statement differed from that given in
     the procedure prototype. The assembler performed the appropriate
     type conversion.

..marcim ***Description needed***  Done.  --JCK

.context A6001
..*.INTERNAL eNoRet
.freeze 3
                                             \i\p\aUp\v@errA4XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

     MASM warning A6001

     no return from procedure

     A PROC statement generated a prologue, but there was no RET or IRET
     instruction found inside the procedure block.

..marcim ***Description needed***  Done.  --JCK

..MSI.CAUSE A high-level procedure generated a prologue,
..MSI.CAUSE but no RET* or IRET* instruction was found
..MSI.CAUSE inside the procedure

.context A6003
..*.INTERNAL eCondLeng
.freeze 3
                                             \i\p\aUp\v@errA4XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

     MASM warning A6003

     conditional jump lengthened

     A conditional jump was encoded as a reverse conditional jump around
     a near unconditional jump.

     You may be able to rearrange code to avoid the longer form.
.context A6004
..*.INTERNAL eLocRef
.freeze 3
                                             \i\p\aUp\v@errA4XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

     MASM warning A6004

     procedure argument or local not referenced

     You passed a procedure argument or created a variable with the LOCAL
     directive that was not used in the procedure body.

     Unnecessary parameters and locals waste code and stack space.
..MSI.CAUSE symbol is not referenced within the procedure
.context A6005
..*.INTERNAL e2PassIf
.freeze 3
                                             \i\p\aUp\v@errA4XXX\v\i\p \i\p\aContents\vpwb.hlp!hv\v\i\p \i\p\aIndex\vpwb.hlp!vx\v\i\p \i\p\aBack\v!B\v\i\p
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

     MASM warning A6005

     expression condition may be pass-dependent

     Under the /Zm command-line option or the OPTION M510 directive,
     the value of an expression changed between passes.

     This error message may indicate that the code is pass-dependent and
     must be rewritten.
