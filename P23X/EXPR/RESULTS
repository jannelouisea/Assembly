Test date: 10/02/16  18:40:08 
The number of times you used the grading program is 2 
In the business world, your customer replaces the grading program. 
The goal is a correct program with the fewest grading attempts. 
EXPR Grading System Version 4.0
Student: Last=Ave                  First=Janne                Type=Individual          
Grading and testing history log
       User Test.    Date: 10/02/16  14:04:17  SAMPLE.IN    testout      
       User Test.    Date: 10/02/16  14:06:28  SAMPLE.IN    testout      
       User Test.    Date: 10/02/16  14:16:30  IN.TXT       testout      
       User Test.    Date: 10/02/16  14:19:39  IN.TXT       testout      
       User Test.    Date: 10/02/16  14:19:56  IN.TXT       testout      
       User Test.    Date: 10/02/16  14:20:43  IN.TXT       testout      
   *** Grading Run.  Date: 10/02/16  14:21:08 
       User Test.    Date: 10/02/16  14:24:58  GRAD06.IN    testout      
       User Test.    Date: 10/02/16  14:36:51  IN.TXT       testout      
       User Test.    Date: 10/02/16  18:37:41  GRAD06.IN    testout      
       User Test.    Date: 10/02/16  18:39:08  GRAD06.IN    testout      
       User Test.    Date: 10/02/16  18:39:18  SAMPLE.IN    testout      
   *** Grading Run.  Date: 10/02/16  18:40:08 
   Running test 01
   Running test 02
   Running test 03
   Running test 04
   Running test 05
   Running test 06
   Running test 07
   Running test 08
   Running test 09
   Running test 10
   Running test 11
   Running test 12
   Running test 13
   Running test 14
   Running test 15
   Running test 16
   Running test "long input line test"
   *** Passed all functional tests
++ Grade ++   60 = Points earned for correct answers.

-> We are now analyzing your source code. You will be graded on
the number of instructions you wrote to solve this problem.
The target for the number of executable instructions written is:
 00 -  75 = 20 points 
 76 -  80 = 15 points 
 81 -  85 = 10 points 
 86 -  90 =  5 points 
 91+      =  0 points 
Your actual counts are:
Lines ....... 224    Comments ...  99    Labels .......  10   
Directives ..   6    Variables ..  58    Executables ..  51    McCabe ..  10 
++ Grade ++   20 = Points earned for code written efficiency.  

-> Analyzing program documentation. 
The heuristic algorithms used may have problems with your specific code. 
Contact the instructor if you detect a problem with your grade. 
DOCPH-0016 The program header format is adequate. 
DOCHB-1.20 Use of code block headers is adequate. 
DOCLC-1.00 Use of line comments is adequate. 
++ Grade ++   20 = Points earned for correct documentation.    

-> Calculating the total grade for the program.                  
This grade is subject to adjustment by the instructor.           
This grade will be reduced by any late submission penalty.       
++ Grade ++  100 = Total grade generated by the Grading System.  

-> Statistics on testing and grading                             
    11  = Number of user tests.                                  
     2  = Number of grading runs to get the program working.     
     0  = Number of grading runs to improve efficiency or documentation. 

+- atyC<6&}xC86&k~C6&juiC86&zuzC766&Zkyz&jgzk@&7656857<&&7>@:6@6>&



Building the file expr.ans for electronic submission...

